/**
* This file contains critical variabes, NEED to be import in every "get togather" less files, and in the first import order.
* 此文件为基础关键变量，尽量在汇总性less文件中，第一个引入。
*/
/*
    Mixins

    these contents wouldn't be output to the actual css unless it's used somewhere.

    除非在引入的less文件中使用，否则这些mixin将不会被全部包含在最终css里。
*/
.mixin_btn-solid {
  display: inline-block;
  color: white;
  border: 1px solid #ed6d00;
  background-color: #ed6d00;
  padding: 1em 3em;
  border-radius: 5px;
}
.mixin_btn-hollow {
  display: inline-block;
  color: #ed6d00;
  background-color: #fff5ed;
  border: 1px solid #ed6d00;
  padding: 1em 3em;
  border-radius: 5px;
}
.page-contents-wrapper .order-center-box {
  width: 100%;
  height: 100%;
  margin-top: 30px;
  border: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .order-center {
  padding: 10px;
  font-size: 16px;
}
.page-contents-wrapper .order-center-box .order-list {
  border-top: 1px solid #ed6d00;
  border-bottom: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .order-list div {
  padding: 15px 0;
  vertical-align: middle;
  text-align: center;
  font-size: 14px;
}
.page-contents-wrapper .order-center-box .order-details {
  padding: 15px 0;
  border-bottom: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .order-details div {
  text-align: center;
  font-size: 14px;
}
.page-contents-wrapper .order-center-box .order-details .books-name {
  text-align: left;
}
.page-contents-wrapper .order-center-box .order-details .course {
  *zoom: 1;
  padding: 0 40px;
}
.page-contents-wrapper .order-center-box .order-details .course:after,
.page-contents-wrapper .order-center-box .order-details .course:before {
  content: "";
  display: table;
}
.page-contents-wrapper .order-center-box .order-details .course:after {
  clear: both;
}
.page-contents-wrapper .order-center-box .order-details .course img {
  width: 30%;
  display: inline-block;
  float: left;
  margin-right: 20px;
}
.page-contents-wrapper .order-center-box .order-details .course div {
  width: 55%;
  float: left;
  line-height: 22px;
  display: inline-block;
}
.page-contents-wrapper .order-center-box .order-details .number {
  padding-top: 20px;
}
.page-contents-wrapper .order-center-box .order-details .price {
  padding-top: 20px;
}
.page-contents-wrapper .order-center-box .invoice {
  vertical-align: middle;
  border-bottom: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .invoice div {
  padding: 18px 18px;
  vertical-align: middle;
}
.page-contents-wrapper .order-center-box .invoice .left-message {
  text-align: center;
}
.page-contents-wrapper .order-center-box .invoice .invoice-right {
  border-left: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .pay {
  vertical-align: middle;
  border-bottom: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .pay div {
  padding: 18px 18px;
  vertical-align: middle;
}
.page-contents-wrapper .order-center-box .pay div div button {
  font-size: 14px;
  padding: .8em 3em;
  display: inline-block;
  background: #ed6d00;
  color: white;
  border-radius: 5px;
  cursor: pointer;
  outline: 0;
}
.page-contents-wrapper .order-center-box .pay div div button:hover {
  background-color: #ff8721;
}
.page-contents-wrapper .order-center-box .pay div div button:active {
  background-color: #ba5600;
}
.page-contents-wrapper .order-center-box .pay div div button img {
  margin-right: 5px;
}
.page-contents-wrapper .order-center-box .pay .left-message {
  text-align: center;
}
.page-contents-wrapper .order-center-box .pay .left-message p {
  height: 40px;
  line-height: 40px;
}
.page-contents-wrapper .order-center-box .pay .pay-right {
  text-align: center;
  border-left: 1px solid #cccccc;
}
.page-contents-wrapper .order-center-box .qq {
  padding: 20px;
  overflow: hidden;
}
.page-contents-wrapper .order-center-box .qq p {
  float: right;
  display: block;
  vertical-align: middle;
}
.page-contents-wrapper .order-center-box .qq p span {
  display: inline-block;
  padding-top: 5px;
  margin-right: 15px;
}
.page-contents-wrapper .order-center-box .qq p img {
  display: inline-block;
}
.page-contents-wrapper .order-qr-pay .info-table table {
  width: 100%;
  padding: 1.5em 0;
  background-color: #f1f1f1;
  text-align: center;
  font-size: 14px;
}
.page-contents-wrapper .order-qr-pay .info-table table b {
  color: #ed6d00;
}
.page-contents-wrapper .order-qr-pay .info-table table i {
  font-weight: 600;
}
.page-contents-wrapper .order-qr-pay .qr-section {
  margin: 4.5em 0;
  margin-bottom: 2em;
  text-align: center;
}
.page-contents-wrapper .order-qr-pay .qr-section img {
  display: inline-block;
  width: 100%;
  max-width: 258px;
}
.page-contents-wrapper .order-qr-pay .qr-section .btn-return {
  color: white;
  margin-top: 2em;
  display: inline-block;
  font-weight: 600;
  letter-spacing: 1.35em;
  background-color: #ed6d00;
  padding: 2em 4em;
  border-radius: 5px;
  cursor: pointer;
  outline: 0;
}
.page-contents-wrapper .order-qr-pay .qr-section .btn-return:hover {
  background-color: #ff8721;
}
.page-contents-wrapper .order-qr-pay .qr-section .btn-return:active {
  background-color: #ba5600;
}
.page-contents-wrapper .log-footer {
  padding-top: 2em;
  margin-top: 5em;
  padding-bottom: 2em;
  text-align: center;
  border-top: 1px solid #9e9e9e;
}
.page-contents-wrapper .log-footer table {
  margin: auto;
  width: 60%;
  margin-bottom: 2em;
}
.page-contents-wrapper .log-footer table td {
  font-size: 13px;
}
.page-contents-wrapper .log-footer table td:hover {
  color: #ed6d00;
}
.page-contents-wrapper .log-footer p {
  font-size: 13px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
