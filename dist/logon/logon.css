.page-contents-wrapper {
  /**
* This file contains critical variabes, NEED to be import in every "get togather" less files, and in the first import order.
* 此文件为基础关键变量，尽量在汇总性less文件中，第一个引入。
*/
  /*
    Mixins

    these contents wouldn't be output to the actual css unless it's used somewhere.

    除非在引入的less文件中使用，否则这些mixin将不会被全部包含在最终css里。
*/
}
.page-contents-wrapper .mixin_btn-solid {
  display: inline-block;
  color: white;
  border: 1px solid #ed6d00;
  background-color: #ed6d00;
  padding: 1em 3em;
  border-radius: 5px;
}
.page-contents-wrapper .mixin_btn-hollow {
  display: inline-block;
  color: #ed6d00;
  background-color: #fff5ed;
  border: 1px solid #ed6d00;
  padding: 1em 3em;
  border-radius: 5px;
}
.page-contents-wrapper .log-head {
  padding: 2em 0;
}
.page-contents-wrapper .log-head .container > * {
  display: inline-block;
  vertical-align: middle;
}
.page-contents-wrapper .log-head .logo-right {
  margin-left: 18px;
  border-left: 1px solid #ccc;
}
.page-contents-wrapper .log-head .logo-right h2 {
  padding: 1em;
  color: black;
  font-weight: 500;
}
.page-contents-wrapper .log-central {
  height: 530px;
  height: 75vh;
  min-height: 10em;
  text-align: right;
  background: url("../../images/logon/login_back.jpg") center center no-repeat;
  background-size: cover;
}
.page-contents-wrapper .log-central .floater {
  display: inline-block;
  margin: 3em;
  padding: 2em;
  text-align: left;
  background-color: #fff;
}
.thirdp-register .page-contents-wrapper .log-central .floater h2 {
  margin-bottom: 1.5em;
  color: #ed6d00;
  font-weight: 500;
}
.page-contents-wrapper .log-central .floater .type-select {
  margin-top: 2em;
  text-align: center;
}
.page-contents-wrapper .log-central .floater .type-select .form-block {
  display: inline-block;
  margin-left: 3.5em;
  font-size: 14px;
}
.page-contents-wrapper .log-central .floater .type-select .form-block:first-child {
  margin-left: 0;
}
.page-contents-wrapper .log-central .floater .info-inputs {
  padding: 3em 0;
}
.page-contents-wrapper .log-central .floater .info-inputs input {
  display: block;
  width: 100%;
  padding: 1em 1.5em;
  border: 1px solid #ccc;
  font-size: 14px;
}
.page-contents-wrapper .log-central .floater .info-inputs input + input {
  margin-top: .6em;
}
.page-contents-wrapper .log-central .floater .lower-row {
  *zoom: 1;
}
.page-contents-wrapper .log-central .floater .lower-row:after,
.page-contents-wrapper .log-central .floater .lower-row:before {
  content: "";
  display: table;
}
.page-contents-wrapper .log-central .floater .lower-row:after {
  clear: both;
}
.page-contents-wrapper .log-central .floater .lower-row > label {
  float: left;
  vertical-align: middle;
}
.page-contents-wrapper .log-central .floater .lower-row .forg-pass {
  float: right;
  font-size: 14px;
}
.page-contents-wrapper .log-central .floater .lower-row .forg-pass:hover {
  color: #ed6d00;
}
.page-contents-wrapper .log-central .floater .log-btn {
  margin-top: 3em;
  padding-bottom: 2em;
  text-align: center;
}
.page-contents-wrapper .log-central .floater .log-btn button {
  display: inline-block;
  width: 392px;
  height: 57px;
  cursor: pointer;
  outline: 0;
  background: url("../../images/logon/logBtn.jpg");
}
.thirdp-register .page-contents-wrapper .log-central .floater .log-btn {
  padding-bottom: 0;
}
.thirdp-register .page-contents-wrapper .log-central .floater .log-btn button {
  height: 43px;
  background: url("../../images/logon/regBtn.jpg");
}
.page-contents-wrapper .log-central .floater .exist-account {
  display: none;
}
.page-contents-wrapper .log-central .floater .exist-account p {
  margin: 1em;
  text-align: center;
  font-weight: 600;
}
.page-contents-wrapper .log-central .floater .bottom-row {
  padding-bottom: 1em;
  *zoom: 1;
}
.page-contents-wrapper .log-central .floater .bottom-row:after,
.page-contents-wrapper .log-central .floater .bottom-row:before {
  content: "";
  display: table;
}
.page-contents-wrapper .log-central .floater .bottom-row:after {
  clear: both;
}
.page-contents-wrapper .log-central .floater .bottom-row .thirdparty {
  float: left;
}
.page-contents-wrapper .log-central .floater .bottom-row .thirdparty > * {
  display: inline-block;
  vertical-align: middle;
  font-size: 14px;
}
.page-contents-wrapper .log-central .floater .bottom-row .thirdparty a {
  margin-left: .5em;
}
.page-contents-wrapper .log-central .floater .bottom-row .thirdparty a + a {
  margin-left: .5em;
}
.page-contents-wrapper .log-central .floater .bottom-row .rigernow {
  float: right;
  color: #ed6d00;
  font-size: 14px;
}
.page-contents-wrapper .log-footer {
  padding-top: 5em;
  padding-bottom: 3em;
  text-align: center;
}
.page-contents-wrapper .log-footer table {
  width: 60%;
  margin: auto;
  margin-bottom: 2em;
}
.page-contents-wrapper .log-footer table td {
  font-size: 13px;
}
.page-contents-wrapper .log-footer table td:hover {
  color: #ed6d00;
}
.page-contents-wrapper .log-footer p {
  font-size: 13px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
